{"version":3,"sources":["data/category.js","components/Header/Header.js","components/Definitions/Definitions.js","App.js","index.js"],"names":["categories","value","label","Header","category","setCategory","word","setWord","lightMode","darkTheme","createTheme","palette","primary","main","type","className","ThemeProvider","theme","TextField","onChange","e","target","select","language","map","option","MenuItem","Definitions","meanings","console","log","style","backgroundColor","borderRadius","height","src","phonetics","audio","controls","mean","item","definitions","def","color","definition","width","example","synonyms","length","syn","App","useState","setMeanings","setLightMode","DarkModeSwitch","withStyles","switchBase","grey","checked","track","Switch","dictionaryApi","a","query","axios","get","data","useEffect","transition","Container","maxWidth","dispay","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6f69748.chunk.js","sourcesContent":["const categories = [\n  { value: 'English', label: 'en_US' },\n  { value: 'Hindi', label: 'hi' },\n  { value: 'Spanish', label: 'es' },\n  { value: 'French', label: 'fr' },\n  { value: 'Japanese', label: 'ja' },\n  { value: 'Russian', label: 'ru' },\n  { value: 'German', label: 'de' },\n  { value: 'Italian', label: 'it' },\n  { value: 'Korean', label: 'ko' },\n  { value: 'Brazilian Portuguese', label: 'pt-BR' },\n  { value: 'Arabic', label: 'ar' },\n  { value: 'Turkish', label: 'tr' },\n];\n\nexport default categories;\n","import './Header.css';\nimport { createTheme, TextField, ThemeProvider, MenuItem } from '@material-ui/core/';\nimport categories from '../../data/category';\n\nconst Header = ({ category, setCategory, word, setWord, lightMode }) => {\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: lightMode ? '#000' : '#fff',\n      },\n      type: lightMode ? 'light' : 'dark',\n    },\n  });\n\n  const handleChange = language => {\n    setCategory(language);\n    setWord('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"title\">{word ? word : 'Word Hunt'}</h1>\n      <div className=\"inputs\">\n        <ThemeProvider theme={darkTheme}>\n          <TextField\n            className=\"search\"\n            label=\"Search a word\"\n            value={word}\n            onChange={e => setWord(e.target.value)}\n          />\n\n          <TextField\n            className=\"select\"\n            select\n            label=\"Language\"\n            value={category}\n            onChange={e => handleChange(e.target.value)}\n          >\n            {categories.map(option => (\n              <MenuItem key={option.label} value={option.label}>\n                {option.value}\n              </MenuItem>\n            ))}\n          </TextField>\n        </ThemeProvider>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import './Definitions.css';\n\nconst Definitions = ({ word, category, meanings, lightMode }) => {\n  console.log('meanings :>> ', meanings);\n  return (\n    <div className=\"meanings\">\n      {meanings[0] && word && category === 'en_US' && (\n        <audio\n          style={{ backgroundColor: '#fff', borderRadius: 10, height: '20px' }}\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\n          controls\n        >\n          Your Browser doesn't support audio element\n        </audio>\n      )}\n\n      {word === '' ? (\n        <span className=\"subTitle\">Start by typing a word in search</span>\n      ) : (\n        meanings.map(mean =>\n          mean.meanings.map(item =>\n            item.definitions.map(def => (\n              <div\n                key={def.definition}\n                className=\"singleMean\"\n                style={{\n                  backgroundColor: lightMode ? '#3b5360' : 'white',\n                  color: lightMode ? 'white' : 'black',\n                }}\n              >\n                <b>{def.definition}</b>\n                <hr style={{ backgroundColor: 'black', width: '100%' }} />\n                {def.example && (\n                  <span>\n                    <b>Example : </b>\n                    {def.example}\n                  </span>\n                )}\n                {def.synonyms.length !== 0 && (\n                  <span>\n                    <b>Synonyms : </b>\n                    {def.synonyms.map(syn => `${syn},`)}\n                  </span>\n                )}\n              </div>\n            )),\n          ),\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Definitions;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Switch, withStyles } from '@material-ui/core';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Definitions from './components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\n\nfunction App() {\n  const [word, setWord] = useState('');\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState('en_US');\n  const [lightMode, setLightMode] = useState(false);\n\n  const DarkModeSwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  const dictionaryApi = async () => {\n    try {\n      const query = `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`;\n      const data = await axios.get(query);\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category]);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: '100vh',\n        backgroundColor: lightMode ? '#fff' : '#282c34',\n        color: lightMode ? 'black' : 'white',\n        transition: 'all 0.5s linear',\n      }}\n    >\n      <Container\n        maxWidth=\"md\"\n        style={{\n          dispay: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <div className=\"\" style={{ position: 'absolute', top: 0, right: 15, paddingTop: 10 }}>\n          <span>{lightMode ? 'Dark' : 'Light'} Mode</span>\n          <DarkModeSwitch checked={lightMode} onChange={() => setLightMode(!lightMode)} />\n        </div>\n        <Header\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setWord={setWord}\n          lightMode={lightMode}\n        />\n\n        {meanings && (\n          <Definitions word={word} meanings={meanings} category={category} lightMode={lightMode} />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}